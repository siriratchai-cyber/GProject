<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Account;
use App\Models\Club;
use App\Models\Member;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Session;

class UserController extends Controller
{
    // ‚úÖ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
    public function showRegisterForm()
    {
        return view('register');
    }

    // ‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
    public function register(Request $request)
    {
        $request->validate([
            'std_name' => 'required|string|max:255',
            'std_id'   => 'required|string|max:255|unique:accounts,std_id',
            'email'    => 'required|email|max:255|unique:accounts,email',
            'password' => 'required|string|min:6',
            'major'    => 'required|string|max:255',
            'year'     => 'required|integer',
        ]);

        $User = new Account;
        $User->std_name = $request->std_name;
        $User->std_id   = $request->std_id;
        $User->email    = $request->email;
        $User->password = Hash::make($request->password);
        $User->major    = $request->major;
        $User->role     = '‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤'; // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
        $User->year     = $request->year;
        $User->save();

        return redirect('login')->with('success', '‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    }

    // ‚úÖ ‡∏ü‡∏≠‡∏£‡πå‡∏° login
    public function login()
    {
        return view('login');
    }

    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ login
    public function checklogin(Request $request)
    {
        $user = Account::where('std_id', $request->std_id)->first();

        if (!$user || !Hash::check($request->password, $user->password)) {
            return back()->withErrors(['std_id' => '‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á']);
        }

        // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ session
        Session::put('std_id', $user->std_id);
        Session::put('role', $user->role);

        // üëâ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
        if ($user->role === "‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô") {
            return redirect()->route('admin.dashboard');
        }

        // üëâ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡∏°‡∏£‡∏°
        $leaderclub = $user->clubs()->wherePivot('role', '‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡∏°‡∏£‡∏°')->first();
        if ($user->role === "‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡∏°‡∏£‡∏°" && $leaderclub) {
            $pendingCount = Member::where('club_id', $leaderclub->id)->where('status', 'pending')->count();
            $activities = $leaderclub->activities()
                ->whereRaw("STR_TO_DATE(CONCAT(date, ' ', time), '%Y-%m-%d %H:%i:%s') >= NOW()")
                ->orderBy('date', 'asc')->get();
            return view('leaderHome', compact('user', 'leaderclub', 'pendingCount', 'activities'));
        }

        // üëâ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ‚Üí ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ homepage
        return redirect()->route('homepage.index');
    }

    // ‚úÖ Dashboard ‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤ (‡∏ä‡∏°‡∏£‡∏° + ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°)
    public function homepage()
    {
        $std_id = Session::get('std_id');
        $user = Account::where('std_id', $std_id)->first();

        if (!$user) {
            return redirect()->route('login')->withErrors(['std_id' => '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà']);
        }

        // ‚úÖ ‡∏ä‡∏°‡∏£‡∏°‡∏ó‡∏µ‡πà user ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°
        $myClubs = $user->clubs()->with('activities')->get();

        // ‚úÖ ‡∏£‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏ä‡∏°‡∏£‡∏°
        $activities = [];
        foreach ($myClubs as $c) {
            foreach ($c->activities as $a) {
                $activities[] = $a;
            }
        }

        return view('homepage', compact('user', 'myClubs', 'activities'));
    }

    // ‚úÖ logout
    public function logout()
    {
        Session::flush();
        return redirect('login')->with('success', '‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß');
    }
}
